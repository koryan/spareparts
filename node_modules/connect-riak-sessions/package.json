{
  "name": "connect-riak-sessions",
  "description": "Connect (ExpressJS) middleware that stores session data in Riak",
  "version": "0.0.3",
  "author": {
    "name": "Randy Secrist",
    "email": "randy.secrist@gmail.com"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:randysecrist/connect-riak-sessions.git"
  },
  "dependencies": {
    "nodiak": "0.4.x",
    "debug": "*"
  },
  "devDependencies": {
    "express-session": "^1.9.1"
  },
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/randysecrist/connect-riak/issues"
  },
  "scripts": {
    "test": "DEBUG=connect:riak node test.js"
  },
  "readme": "# Connect Riak Sessions\n[![Build Status](https://travis-ci.org/randysecrist/connect-riak-sessions.png)](https://travis-ci.org/randysecrist/connect-riak-sessions)\n[![Gem Version](https://badge.fury.io/js/connect-riak-sessions.png)](http://badge.fury.io/js/connect-riak-sessions)\n\nconnect-riak-sessions is a Riak session store implemented as middleware for [connect](https://github.com/senchalabs/connect) & [expressjs](https://github.com/visionmedia/express) backed by [nodiak](https://github.com/nathanaschbacher/nodiak).  Any version of Riak will work.\n\nFor extra bang for your buck; see automatic key expiration using [bitcask](http://docs.basho.com/riak/latest/ops/advanced/backends/bitcask).\n\nconnect-riak-sessions `>= 0.0.1` developed on connect `2.9.2`.\n\n## Installation\n\n\t  $ npm install connect-riak-sessions\n\n## Options\n\n  - `client` An existing nodiak client object you normally get from `riak.getClient()`\n  - `bucket` Riak bucket to use defaulting to `expressjs_sessions`\n  - `scheme` Riak scheme ('http'|'https')\n  - `host` Riak server hostname\n  - `port` Riak server tcp port #\n  - ...    Remaining options passed to the riak `getClient()` method.\n\n## Usage\n\nTo use with Connect or a Test Framework:\n\n    var connect = require('express-session'),\n        RiakStore = require('connect-riak-sessions')(connect);\n\n    connect().use(connect.session({\n      secret: 'keyboard cat',\n      store: new RiakStore(options)\n    }));\n\nTo use with ExpressJS:\n\n    var RiakStore = require('connect-riak-sessions')(express);\n\n    // Configure Middleware\n    app.use(express.session({\n      store: new RiakSessionStore({\n        bucket: 'app_session_bucket',\n        scheme: 'http',\n        host: 'localhost',\n        port: 8098,\n      }),\n      secret: 'keyboard cat'\n    }));\n\n## API Docs\n\nThe [API Docs](https://github.com/randysecrist/connect-riak-sessions/blob/master/API.md) are generated using [Dox](https://github.com/visionmedia/dox).\n\n# License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "_id": "connect-riak-sessions@0.0.3",
  "dist": {
    "shasum": "cfc7fd4d95412054f102a2ab88b7e350f6c9b050"
  },
  "_from": "connect-riak-sessions@~0.0.3",
  "_resolved": "https://registry.npmjs.org/connect-riak-sessions/-/connect-riak-sessions-0.0.3.tgz"
}
