{
  "name": "dbug",
  "version": "0.4.2",
  "description": "debug improvements",
  "scripts": {
    "matcha": "matcha -I exports",
    "test": "mocha --check-leaks --ui exports"
  },
  "devDependencies": {
    "insist": "*",
    "mocha": "1.x",
    "matcha": "*",
    "utcstring": "*"
  },
  "readmeFilename": "README.md",
  "keywords": [
    "debug",
    "dbug",
    "log",
    "logging",
    "console"
  ],
  "author": {
    "name": "Sean McArthur",
    "email": "sean.monstar@gmail.com",
    "url": "http://seanmonstar.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/seanmonstar/dbug.git"
  },
  "bugs": {
    "url": "https://github.com/seanmonstar/dbug/issues"
  },
  "license": "MPLv2.0",
  "files": [
    "LICENSE",
    "index.js"
  ],
  "readme": "# dbug\r\n\r\n[![Build Status](https://travis-ci.org/seanmonstar/dbug.png?branch=master)](https://travis-ci.org/seanmonstar/dbug)\r\n[![NPM version](https://badge.fury.io/js/dbug.png)](http://badge.fury.io/js/dbug)\r\n\r\nA drop-in replacement for [debug][], for slightly more utility.\r\n\r\n```js\r\nvar dbug = require('dbug')('foo:bar');\r\n\r\ndbug('just like debug'); // except goes to stdout, not stderr\r\ndbug(new Error('also like debug'));\r\n\r\n// additional methods\r\ndbug.info('info');\r\ndbug.warn('warning');\r\ndbug.error('red alert');\r\n```\r\n\r\nJust like debug, `dbug` won't do anything unless the `DEBUG` env variable matches the `dbug` logger, but with slightly more lenient matching.\r\n\r\n```\r\nDEBUG=*\r\nDEBUG=foo,quux\r\nDEBUG=foo // also acts as foo:*\r\n```\r\n\r\nA user script wanting to dynamically enable or disable can do it a\r\ncouple ways:\r\n\r\n```js\r\nrequire('dbug').env = 'foo,quux'; // just like ENV var\r\nvar foo = require('dbug')('foo');\r\nfoo.enabled = true;\r\n```\r\n\r\n[debug]: https://npmjs.org/package/debug\r\n",
  "_id": "dbug@0.4.2",
  "_from": "dbug@~0.4.2"
}
